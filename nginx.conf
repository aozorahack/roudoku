user  pawa staff;
worker_rlimit_nofile 4096; # ファイルディスクリプタの上限を引き上げる
worker_processes  4;

pid        /usr/local/var/log/nginx/nginx.pid;
error_log  /usr/local/var/run/nginx/error.log;

# ワーカープロセス１つあたりが同時に処理できる接続の数
events { worker_connections  1024; }

http {
    include        mime.types;
    default_type   application/octet-stream;
    server_tokens  off; # nginx のバージョンを表示しない

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /usr/local/var/log/nginx/access.log  main;

    # パフォーマンス向上のための雑多なオプション
    sendfile    on;
    tcp_nopush  on;

    keepalive_timeout          10;   # 10秒以内でページのすべてのリソースを返すのを目標に
    client_max_body_size       500m; # アップロードサイズの制限
    reset_timedout_connection  on;   # 接続がタイムアウトしたら確実にメモリをクリアする
    merge_slashes              on;   # 連続するスラッシュを１つにマージする

    proxy_redirect off;                      # バックエンドサーバからの応答に処理を加えない
    proxy_set_header Host $host;             # クライアントの要求に含まれるHostの内容を使う
    proxy_set_header X-Forwarded-Host $host; # クライアントの要求に含まれるHostの内容を使う
    proxy_set_header X-Real-IP $remote_addr; # クライアントの実際のIPアドレスを取得
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # クライアントが自分の側でプロキシを使っている場合に実際のIPアドレスを取得
    client_body_buffer_size 128k;            # クライアントからのリクエストボディを読み取る際のバッファサイズ
    proxy_connect_timeout 30;                # 上位サーバへリクエストを行う際にNginxがコネクションの確立を待つタイムアウト値
    proxy_send_timeout 30;
    proxy_read_timeout 30;
    proxy_buffer_size 4k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;

    index  index.html  index.php;

    # ウェブソケットのリクエストでなければアップグレードしない
    map $http_upgrade $connection_upgrade {
        default  upgrade;
        ''       close;
    }

    gzip  on;
    gzip_http_version 1.1;
    gzip_types text/plain
               #text/html # デフォルトでオンなので指定の必要なし
               text/xml
               text/css
               text/javascript
               application/xml
               application/json
               application/rss+xml
               application/atom+xml
               application/javascript
               application/x-javascript
    gzip_buffers 32 4k;
    gzip_min_length 1024;
    gzip_comp_level 4;
    gzip_proxied any;
    gzip_disable msie6;

    # https://www.ssllabs.com/ssltest/ でA以上を取れるように！
    # Ref. https://wiki.mozilla.org/Security/Server_Side_TLS
    ssl_session_timeout  10m; # キャッシュに格納されているSSLパラメータを再利用できる時間
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers    ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK;
    ssl_prefer_server_ciphers on;
    #ssl_dhparam /etc/certs/dhparam.pem;
    ssl_session_cache shared:SSL:10m;

    #spdy_headers_comp 4; # CRIME攻撃があるので圧縮しない

    server {
        listen       443;
        server_name  localhost;
        access_log   /usr/local/var/log/nginx/localhost.log  main;

        ssl                  on;
        ssl_certificate      /Users/pawa/Desktop/www/server.crt;
        ssl_certificate_key  /Users/pawa/Desktop/www/server.key;

        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;             # クライアントの要求に含まれるHostの内容を使う
            proxy_set_header X-Forwarded-Host $host; # クライアントの要求に含まれるHostの内容を使う
            proxy_set_header X-Real-IP $remote_addr; # クライアントの実際のIPアドレスを取得
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # クライアントが自分の側でプロキシを使っている場合に実際のIPアドレスを取得
            proxy_read_timeout 200; # WebSocket のキープアライブメッセージの送信間隔より長くなるように設定する
            proxy_pass  https://rodoku;
        }

#        location /voice2wav {
#            proxy_pass https://rodoku;
#        }

#        location /nginx_status {
#            stub_status on;
#            access_log off;
#            allow 127.0.0.1;
#            deny all;
#        }
    }

    upstream rodoku { server 127.0.0.1:3000; }
}
